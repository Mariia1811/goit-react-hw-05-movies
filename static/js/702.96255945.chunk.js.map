{"version":3,"file":"static/js/702.96255945.chunk.js","mappings":"kUAEaA,EAAOC,EAAAA,GAAAA,KAAH,0EAIJC,EAAOD,EAAAA,GAAAA,KAAH,wCAGJE,EAAQF,EAAAA,GAAAA,MAAH,kIAQLG,EAAkBH,EAAAA,GAAAA,GAAH,4GAMfI,EAAUJ,EAAAA,GAAAA,QAAH,2b,SCkEpB,MAhFA,WAAmB,IAAD,EAChB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACjD,GAAsCC,EAAAA,EAAAA,UAASF,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,MAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAmCA,OAjCAC,EAAAA,EAAAA,YAAU,WACHP,GAIL,mCAAC,mGAEGM,EAFH,UAEuBE,EAAAA,EAAAA,IAAkB,CAAEC,MAAOT,IAFlD,kFAIGU,EAAAA,GAAAA,MAAY,gCAAiC,CAC3CC,MAAO,YALZ,yDAAD,sDASD,GAAE,CAACX,KAoBF,SAACT,EAAD,WACE,UAACK,EAAD,YACE,UAACH,EAAD,CAAMmB,SAhBZ,SAAsBC,GACpBA,EAAEC,iBAEGX,EAAYY,QACfL,EAAAA,GAAAA,KAAW,+CAAgD,CACzDC,MAAO,YAGXZ,EAAgC,KAAhBI,EAAqB,CAAEM,MAAON,GAAgB,CAAC,GAC/DC,EAAe,GAEhB,EAKK,WACE,SAACV,EAAD,CACEsB,UAAU,QACVC,KAAK,kBACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOnB,EACPoB,SA7BV,SAAsBV,GACpBT,EAAeS,EAAEW,OAAOF,MAAMG,cAC/B,KA6BO,SAACC,EAAA,EAAD,CAAY,aAAW,SAASR,KAAK,SAArC,UACE,SAACS,EAAA,EAAD,SAGHtB,IACC,SAACV,EAAD,UACGU,EAAWuB,KACV,YAA6D,IAA1DC,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACvC,OACE,SAAC,IAAD,CAEEJ,GAAIA,EACJK,OAAM,6CAAwCJ,GAC9CC,MAAOA,EACPI,KAAMH,EACNI,KAAMH,GALDJ,EAQV,UAOd,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n`;\nexport const Form = styled.form`\npadding: 20px;\n`;\nexport const Input = styled.input`\nborder: none;\nwidth: 320px;\n    border-bottom: 1px solid;\n    font-size: 20px;\n    color: #57606f;\n\n`;\nexport const ListSearchMovie = styled.ul`\ndisplay: flex;\n    gap: 30px;\n    justify-content: center;\n    flex-wrap: wrap;\n`;\nexport const Section = styled.section`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-left: auto;\nmargin-right: auto;\nmax-width: 1280px;\npadding-left: 32px;\npadding-right: 32px;\n\n@media screen and (min-width: 320px) and (max-width: 767.98px) {\n& {\n    max-width: 320px;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n}\n\n@media screen and (min-width: 768px) and (max-width: 1279.98px) {\n& {\n    width: 768px;\n}\n}\n`;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { IconButton } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { toast } from 'react-toastify';\nimport { fetchSearchMovies } from 'services/fetchMovies';\nimport MovieList from 'components/MovieItem';\nimport { Input, Form, ListSearchMovie, Main, Section } from './Movies.styled';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieParams = searchParams.get('query') ?? '';\n  const [searchMovie, setSearchMovie] = useState(movieParams);\n  const [listMovies, setlistMovies] = useState(null);\n\n  useEffect(() => {\n    if (!movieParams) {\n      return;\n    }\n\n    (async function getPopularMovies() {\n      try {\n        setlistMovies(await fetchSearchMovies({ query: movieParams }));\n      } catch {\n        toast.error('Oops error, please try again.', {\n          theme: 'colored',\n        });\n      }\n    })();\n  }, [movieParams]);\n\n  function handleChange(e) {\n    setSearchMovie(e.target.value.toLowerCase());\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!searchMovie.trim()) {\n      toast.warn('Sorry, the field is empty, please try again.', {\n        theme: 'colored',\n      });\n    }\n    setSearchParams(searchMovie !== '' ? { query: searchMovie } : {});\n    setSearchMovie('');\n    return;\n  }\n\n  return (\n    <Main>\n      <Section>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            className=\"input\"\n            name=\"searchUserMovie\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchMovie}\n            onChange={handleChange}\n          />\n          <IconButton aria-label=\"search\" type=\"submit\">\n            <SearchIcon />\n          </IconButton>\n        </Form>\n        {listMovies && (\n          <ListSearchMovie>\n            {listMovies.map(\n              ({ id, poster_path, title, release_date, vote_average }) => {\n                return (\n                  <MovieList\n                    key={id}\n                    id={id}\n                    poster={`https://image.tmdb.org/t/p/original${poster_path}`}\n                    title={title}\n                    date={release_date}\n                    vote={vote_average}\n                  />\n                );\n              }\n            )}\n          </ListSearchMovie>\n        )}\n      </Section>\n    </Main>\n  );\n}\n\nexport default Movies;\n"],"names":["Main","styled","Form","Input","ListSearchMovie","Section","useSearchParams","searchParams","setSearchParams","movieParams","get","useState","searchMovie","setSearchMovie","listMovies","setlistMovies","useEffect","fetchSearchMovies","query","toast","theme","onSubmit","e","preventDefault","trim","className","name","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","IconButton","Search","map","id","poster_path","title","release_date","vote_average","poster","date","vote"],"sourceRoot":""}